x =viztab$loc,
hovertemplate = paste(
'<br>Locus: %{x}<br>',
'<br>Depth: %{y}<br>'),
name=paste("Coverage Depth:",unique(depthfile$sample)),
fill = 'tozeroy'
) %>%
add_trace(
y = -viztab2$adjdepth,
x =viztab2$loc,
hovertemplate = paste(
'<br>Locus: %{x}<br>',
'<br>Depth: %{y}<br>'),
name=paste("Coverage Depth:",unique(depthfile2$sample)),
fill = 'tozeroy'
)
fig2 <- plot_ly(mode = 'lines') %>%
add_lines(x=1:features$end[features$type=="source"],
y=0,
hovertemplate = paste('<i>Locus</i>: %{y}'),
line=list(color="grey"),name="Plasmid") %>%
add_trace(x=0,
y=0,
mode = 'markers', marker = list(
color = 'white',
size = 15,
line = list(
color = 'grey',
width = 2
)
),name="Source")
for(i in 1:length(features$type[features$type=="CDS"])) {
testdf <- set.polygon(start=features$start[features$type=="CDS"][i],end=features$end[features$type=="CDS"][i],strand =features$strand[features$type=="CDS"][i] ,len=features$end[features$type=="source"],arrow=5,r1=-10,r2=10)
fig2 <-  fig2 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=features$label[features$type=="CDS"][i],
fill = 'toself')
}
selected <- features[features$label %in% select, ]
for(i in 1:length(selected$start)) {
testdf <- set.polygon(start=selected$start[i],end=selected$end[i],strand=selected$strand[i],len=features$end[features$type=="source"],arrow=5,r1=-20,r2=-40)
fig2 <-  fig2 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=selected$label[i],
fill = 'toself')
}
return(subplot(fig1,fig2,nrows = 2,shareX = T,shareY = T))
}
plot.linear.compare(features=features,features2=features,depthfile=profile$sample_02,depthfile2=profile$sample_03,chr="cis3",chr2="cis3",select=c("3' Intron","J23107"), source=paste("cir_plot","cis3",sep = "_"))
plot.linear.compare <- function(features,features2,depthfile,depthfile2,chr,chr2, select=NULL, source="lin_plot") {
viztab <- extract.norm.depth(depthfile,chr,1,features$end[features$type=="source"])
viztab2 <- extract.norm.depth(depthfile2,chr2,1,features2$end[features2$type=="source"])
maxv <-  max(viztab$adjdepth,viztab2$adjdepth)
fig <- plot_ly(
source = source,
mode = 'lines'
)
fig1 <-  fig %>%
add_trace(
y = viztab$adjdepth,
x =viztab$loc,
hovertemplate = paste(
'<br>Locus: %{x}<br>',
'<br>Depth: %{y}<br>'),
name=paste("Coverage Depth:",unique(depthfile$sample)),
fill = 'tozeroy'
) %>%
add_trace(
y = -viztab2$adjdepth,
x =viztab2$loc,
hovertemplate = paste(
'<br>Locus: %{x}<br>',
'<br>Depth: %{y}<br>'),
name=paste("Coverage Depth:",unique(depthfile2$sample)),
fill = 'tozeroy'
)
fig2 <- plot_ly(mode = 'lines') %>%
add_lines(x=1:features$end[features$type=="source"],
y=0,
hovertemplate = paste('<i>Locus</i>: %{y}'),
line=list(color="grey"),name="Plasmid") %>%
add_trace(x=0,
y=0,
mode = 'markers', marker = list(
color = 'white',
size = 15,
line = list(
color = 'grey',
width = 2
)
),name="Source")
for(i in 1:length(features$type[features$type=="CDS"])) {
testdf <- set.polygon(start=features$start[features$type=="CDS"][i],end=features$end[features$type=="CDS"][i],strand =features$strand[features$type=="CDS"][i] ,len=features$end[features$type=="source"],arrow=5,r1=-10,r2=10)
fig2 <-  fig2 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=features$label[features$type=="CDS"][i],
fill = 'toself')
}
selected <- features[features$label %in% select, ]
for(i in 1:length(selected$start)) {
testdf <- set.polygon(start=selected$start[i],end=selected$end[i],strand=selected$strand[i],len=features$end[features$type=="source"],arrow=5,r1=-20,r2=-40)
fig2 <-  fig2 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=selected$label[i],
fill = 'toself')
}
return(subplot(fig1,fig2,nrows = 2,shareX = T,heights=c(0.8,0.2)))
}
plot.linear.compare(features=features,features2=features,depthfile=profile$sample_02,depthfile2=profile$sample_03,chr="cis3",chr2="cis3",select=c("3' Intron","J23107"), source=paste("cir_plot","cis3",sep = "_"))
plot.linear.compare <- function(features,features2,depthfile,depthfile2,chr,chr2, select=NULL, source="lin_plot") {
viztab <- extract.norm.depth(depthfile,chr,1,features$end[features$type=="source"])
viztab2 <- extract.norm.depth(depthfile2,chr2,1,features2$end[features2$type=="source"])
maxv <-  max(viztab$adjdepth,viztab2$adjdepth)
fig <- plot_ly(
source = source,
mode = 'lines'
)
fig1 <-  fig %>%
add_trace(
y = viztab$adjdepth,
x =viztab$loc,
hovertemplate = paste(
'<br>Locus: %{x}<br>',
'<br>Depth: %{y}<br>'),
name=paste("Coverage Depth:",unique(depthfile$sample)),
fill = 'tozeroy'
) %>%
add_trace(
y = -viztab2$adjdepth,
x =viztab2$loc,
hovertemplate = paste(
'<br>Locus: %{x}<br>',
'<br>Depth: %{y}<br>'),
name=paste("Coverage Depth:",unique(depthfile2$sample)),
fill = 'tozeroy'
)
fig2 <- plot_ly(mode = 'lines') %>%
add_lines(x=1:features$end[features$type=="source"],
y=0,
hovertemplate = paste('<i>Locus</i>: %{y}'),
line=list(color="grey"),name="Plasmid") %>%
add_trace(x=0,
y=0,
mode = 'markers', marker = list(
color = 'white',
size = 15,
line = list(
color = 'grey',
width = 2
)
),name="Source")
for(i in 1:length(features$type[features$type=="CDS"])) {
testdf <- set.polygon(start=features$start[features$type=="CDS"][i],end=features$end[features$type=="CDS"][i],strand =features$strand[features$type=="CDS"][i] ,len=features$end[features$type=="source"],arrow=5,r1=-10,r2=10)
fig2 <-  fig2 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=features$label[features$type=="CDS"][i],
fill = 'toself')
}
selected <- features[features$label %in% select, ]
for(i in 1:length(selected$start)) {
testdf <- set.polygon(start=selected$start[i],end=selected$end[i],strand=selected$strand[i],len=features$end[features$type=="source"],arrow=5,r1=-20,r2=-40)
fig3 <-  fig3 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=selected$label[i],
fill = 'toself')
}
fig3 <- plot_ly(mode = 'lines') %>%
add_lines(x=1:features$end[features$type=="source"],
y=0,
hovertemplate = paste('<i>Locus</i>: %{y}'),
line=list(color="grey"),name="Plasmid") %>%
add_trace(x=0,
y=0,
mode = 'markers', marker = list(
color = 'white',
size = 15,
line = list(
color = 'grey',
width = 2
)
),name="Source")
for(i in 1:length(features2$type[features2$type=="CDS"])) {
testdf <- set.polygon(start=features2$start[features2$type=="CDS"][i],end=features2$end[features2$type=="CDS"][i],strand =features2$strand[features2$type=="CDS"][i] ,len=features2$end[features2$type=="source"],arrow=5,r1=-10,r2=10)
fig3 <-  fig3 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=features2$label[features2$type=="CDS"][i],
fill = 'toself')
}
selected <- features2[features2$label %in% select2, ]
for(i in 1:length(selected$start)) {
testdf <- set.polygon(start=selected$start[i],end=selected$end[i],strand=selected$strand[i],len=features$end[features$type=="source"],arrow=5,r1=-20,r2=-40)
fig3 <-  fig3 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=selected$label[i],
fill = 'toself')
}
return(subplot(fig2, fig1,fig3,nrows = 3,shareX = T,heights=c(0.2,0.6,0.2)))
}
plot.linear.compare(features=features,features2=features,depthfile=profile$sample_02,depthfile2=profile$sample_03,chr="cis3",chr2="cis3",select=c("3' Intron","J23107"),select2=c("3' Intron"), source=paste("cir_plot","cis3",sep = "_"))
plot.linear.compare <- function(features,features2,depthfile,depthfile2,chr,chr2, select=NULL, select2=NULL,source="lin_plot") {
viztab <- extract.norm.depth(depthfile,chr,1,features$end[features$type=="source"])
viztab2 <- extract.norm.depth(depthfile2,chr2,1,features2$end[features2$type=="source"])
maxv <-  max(viztab$adjdepth,viztab2$adjdepth)
fig <- plot_ly(
source = source,
mode = 'lines'
)
fig1 <-  fig %>%
add_trace(
y = viztab$adjdepth,
x =viztab$loc,
hovertemplate = paste(
'<br>Locus: %{x}<br>',
'<br>Depth: %{y}<br>'),
name=paste("Coverage Depth:",unique(depthfile$sample)),
fill = 'tozeroy'
) %>%
add_trace(
y = -viztab2$adjdepth,
x =viztab2$loc,
hovertemplate = paste(
'<br>Locus: %{x}<br>',
'<br>Depth: %{y}<br>'),
name=paste("Coverage Depth:",unique(depthfile2$sample)),
fill = 'tozeroy'
)
fig2 <- plot_ly(mode = 'lines') %>%
add_lines(x=1:features$end[features$type=="source"],
y=0,
hovertemplate = paste('<i>Locus</i>: %{y}'),
line=list(color="grey"),name="Plasmid") %>%
add_trace(x=0,
y=0,
mode = 'markers', marker = list(
color = 'white',
size = 15,
line = list(
color = 'grey',
width = 2
)
),name="Source")
for(i in 1:length(features$type[features$type=="CDS"])) {
testdf <- set.polygon(start=features$start[features$type=="CDS"][i],end=features$end[features$type=="CDS"][i],strand =features$strand[features$type=="CDS"][i] ,len=features$end[features$type=="source"],arrow=5,r1=-10,r2=10)
fig2 <-  fig2 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=features$label[features$type=="CDS"][i],
fill = 'toself')
}
selected <- features[features$label %in% select, ]
for(i in 1:length(selected$start)) {
testdf <- set.polygon(start=selected$start[i],end=selected$end[i],strand=selected$strand[i],len=features$end[features$type=="source"],arrow=5,r1=-20,r2=-40)
fig3 <-  fig3 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=selected$label[i],
fill = 'toself')
}
fig3 <- plot_ly(mode = 'lines') %>%
add_lines(x=1:features$end[features$type=="source"],
y=0,
hovertemplate = paste('<i>Locus</i>: %{y}'),
line=list(color="grey"),name="Plasmid") %>%
add_trace(x=0,
y=0,
mode = 'markers', marker = list(
color = 'white',
size = 15,
line = list(
color = 'grey',
width = 2
)
),name="Source")
for(i in 1:length(features2$type[features2$type=="CDS"])) {
testdf <- set.polygon(start=features2$start[features2$type=="CDS"][i],end=features2$end[features2$type=="CDS"][i],strand =features2$strand[features2$type=="CDS"][i] ,len=features2$end[features2$type=="source"],arrow=5,r1=-10,r2=10)
fig3 <-  fig3 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=features2$label[features2$type=="CDS"][i],
fill = 'toself')
}
selected <- features2[features2$label %in% select2, ]
for(i in 1:length(selected$start)) {
testdf <- set.polygon(start=selected$start[i],end=selected$end[i],strand=selected$strand[i],len=features$end[features$type=="source"],arrow=5,r1=-20,r2=-40)
fig3 <-  fig3 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=selected$label[i],
fill = 'toself')
}
return(subplot(fig2, fig1,fig3,nrows = 3,shareX = T,heights=c(0.2,0.6,0.2)))
}
plot.linear.compare(features=features,features2=features,depthfile=profile$sample_02,depthfile2=profile$sample_03,chr="cis3",chr2="cis3",select=c("3' Intron","J23107"),select2=c("3' Intron"), source=paste("cir_plot","cis3",sep = "_"))
plot.linear.compare <- function(features,features2,depthfile,depthfile2,chr,chr2, select=NULL, select2=NULL,source="lin_plot") {
viztab <- extract.norm.depth(depthfile,chr,1,features$end[features$type=="source"])
viztab2 <- extract.norm.depth(depthfile2,chr2,1,features2$end[features2$type=="source"])
maxv <-  max(viztab$adjdepth,viztab2$adjdepth)
fig <- plot_ly(
source = source,
mode = 'lines'
)
fig1 <-  fig %>%
add_trace(
y = viztab$adjdepth,
x =viztab$loc,
hovertemplate = paste(
'<br>Locus: %{x}<br>',
'<br>Depth: %{y}<br>'),
name=paste("Coverage Depth:",unique(depthfile$sample)),
fill = 'tozeroy'
) %>%
add_trace(
y = -viztab2$adjdepth,
x =viztab2$loc,
hovertemplate = paste(
'<br>Locus: %{x}<br>',
'<br>Depth: %{y}<br>'),
name=paste("Coverage Depth:",unique(depthfile2$sample)),
fill = 'tozeroy'
)
fig2 <- plot_ly(mode = 'lines') %>%
add_lines(x=1:features$end[features$type=="source"],
y=0,
hovertemplate = paste('<i>Locus</i>: %{y}'),
line=list(color="grey"),name="Plasmid") %>%
add_trace(x=0,
y=0,
mode = 'markers', marker = list(
color = 'white',
size = 15,
line = list(
color = 'grey',
width = 2
)
),name="Source")
for(i in 1:length(features$type[features$type=="CDS"])) {
testdf <- set.polygon(start=features$start[features$type=="CDS"][i],end=features$end[features$type=="CDS"][i],strand =features$strand[features$type=="CDS"][i] ,len=features$end[features$type=="source"],arrow=5,r1=-10,r2=10)
fig2 <-  fig2 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=features$label[features$type=="CDS"][i],
fill = 'toself')
}
selected <- features[features$label %in% select, ]
for(i in 1:length(selected$start)) {
testdf <- set.polygon(start=selected$start[i],end=selected$end[i],strand=selected$strand[i],len=features$end[features$type=="source"],arrow=5,r1=-20,r2=-40)
fig2 <-  fig2 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=selected$label[i],
fill = 'toself')
}
fig3 <- plot_ly(mode = 'lines') %>%
add_lines(x=1:features$end[features$type=="source"],
y=0,
hovertemplate = paste('<i>Locus</i>: %{y}'),
line=list(color="grey"),name="Plasmid") %>%
add_trace(x=0,
y=0,
mode = 'markers', marker = list(
color = 'white',
size = 15,
line = list(
color = 'grey',
width = 2
)
),name="Source")
for(i in 1:length(features2$type[features2$type=="CDS"])) {
testdf <- set.polygon(start=features2$start[features2$type=="CDS"][i],end=features2$end[features2$type=="CDS"][i],strand =features2$strand[features2$type=="CDS"][i] ,len=features2$end[features2$type=="source"],arrow=5,r1=-10,r2=10)
fig3 <-  fig3 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=features2$label[features2$type=="CDS"][i],
fill = 'toself')
}
selected <- features2[features2$label %in% select2, ]
for(i in 1:length(selected$start)) {
testdf <- set.polygon(start=selected$start[i],end=selected$end[i],strand=selected$strand[i],len=features$end[features$type=="source"],arrow=5,r1=-20,r2=-40)
fig3 <-  fig3 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=selected$label[i],
fill = 'toself')
}
return(subplot(fig2, fig1,fig3,nrows = 3,shareX = T,heights=c(0.2,0.6,0.2)))
}
plot.linear.compare(features=features,features2=features,depthfile=profile$sample_02,depthfile2=profile$sample_03,chr="cis3",chr2="cis3",select=c("3' Intron","J23107"),select2=c("3' Intron"), source=paste("cir_plot","cis3",sep = "_"))
plot.linear.compare <- function(features,features2,depthfile,depthfile2,chr,chr2, select=NULL, select2=NULL,source="lin_plot") {
viztab <- extract.norm.depth(depthfile,chr,1,features$end[features$type=="source"])
viztab2 <- extract.norm.depth(depthfile2,chr2,1,features2$end[features2$type=="source"])
maxv <-  max(viztab$adjdepth,viztab2$adjdepth)
fig <- plot_ly(
source = source,
mode = 'lines'
)
fig1 <-  fig %>%
add_trace(
y = viztab$adjdepth,
x =viztab$loc,
hovertemplate = paste(
'<br>Locus: %{x}<br>',
'<br>Depth: %{y}<br>'),
name=paste("Coverage Depth:",unique(depthfile$sample)),
fill = 'tozeroy'
) %>%
add_trace(
y = -viztab2$adjdepth,
x =viztab2$loc,
hovertemplate = paste(
'<br>Locus: %{x}<br>',
'<br>Depth: %{y}<br>'),
name=paste("Coverage Depth:",unique(depthfile2$sample)),
fill = 'tozeroy'
)
fig2 <- plot_ly(mode = 'lines') %>%
add_lines(x=1:features$end[features$type=="source"],
y=0,
hovertemplate = paste('<i>Locus</i>: %{y}'),
line=list(color="grey"),name="Plasmid") %>%
add_trace(x=0,
y=0,
mode = 'markers', marker = list(
color = 'white',
size = 15,
line = list(
color = 'grey',
width = 2
)
),name="Source")
for(i in 1:length(features$type[features$type=="CDS"])) {
testdf <- set.polygon(start=features$start[features$type=="CDS"][i],end=features$end[features$type=="CDS"][i],strand =features$strand[features$type=="CDS"][i] ,len=features$end[features$type=="source"],arrow=5,r1=-10,r2=10)
fig2 <-  fig2 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=features$label[features$type=="CDS"][i],
fill = 'toself')
}
selected <- features[features$label %in% select, ]
for(i in 1:length(selected$start)) {
testdf <- set.polygon(start=selected$start[i],end=selected$end[i],strand=selected$strand[i],len=features$end[features$type=="source"],arrow=5,r1=-20,r2=-40)
fig2 <-  fig2 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=selected$label[i],
fill = 'toself')
}
fig3 <- plot_ly(mode = 'lines') %>%
add_lines(x=1:features$end[features$type=="source"],
y=0,
hovertemplate = paste('<i>Locus</i>: %{y}'),
line=list(color="grey"),name="Plasmid") %>%
add_trace(x=0,
y=0,
mode = 'markers', marker = list(
color = 'white',
size = 15,
line = list(
color = 'grey',
width = 2
)
),name="Source")
for(i in 1:length(features2$type[features2$type=="CDS"])) {
testdf <- set.polygon(start=features2$start[features2$type=="CDS"][i],end=features2$end[features2$type=="CDS"][i],strand =features2$strand[features2$type=="CDS"][i] ,len=features2$end[features2$type=="source"],arrow=5,r1=-10,r2=10)
fig3 <-  fig3 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=features2$label[features2$type=="CDS"][i],
fill = 'toself')
}
selected <- features2[features2$label %in% select2, ]
for(i in 1:length(selected$start)) {
testdf <- set.polygon(start=selected$start[i],end=selected$end[i],strand=selected$strand[i],len=features$end[features$type=="source"],arrow=5,r1=-20,r2=-40)
fig3 <-  fig3 %>%
add_trace(
x = testdf$x,
y =testdf$y,
name=selected$label[i],
fill = 'toself')
}
return(subplot(fig2, fig1,fig3,nrows = 3,shareX = T,heights=c(0.15,0.7,0.15)))
}
plot.linear.compare(features=features,features2=features,depthfile=profile$sample_02,depthfile2=profile$sample_03,chr="cis3",chr2="cis3",select=c("3' Intron","J23107"),select2=c("3' Intron"), source=paste("cir_plot","cis3",sep = "_"))
runApp()
runApp()
runApp()
